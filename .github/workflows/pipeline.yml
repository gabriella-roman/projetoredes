name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout o código do repositório
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configuração do JDK
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    # Entrar na pasta do projeto e rodar o Maven para build
    - name: Build with Maven
      run: |
        cd projetoredes
        mvn clean package

    # Teste da aplicação na pasta projetoredes
    - name: Run Tests
      run: |
        cd projetoredes
        mvn test

  docker:
    runs-on: ubuntu-latest
    needs: build
    environment: projetoredes  # Referência ao ambiente projetoredes

    steps:
    # Checkout do código do repositório
    - name: Checkout repository
      uses: actions/checkout@v3

    # Login no Docker Hub usando o Token
    - name: Login to Docker Hub using token
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Nome de usuário do Docker Hub
        password: ${{ secrets.DOCKER_TOKEN }}     # Token do Docker Hub

    # Build e push da imagem Docker
    - name: Build and Push Docker Image
      run: |
        docker build -t <docker-username>/projetoredes:latest projetoredes/
        docker push <docker-username>/projetoredes:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    environment: projetoredes  # Referência ao ambiente projetoredes

    steps:
    # Deploy para EC2
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i /path/to/your/private/key.pem ubuntu@<EC2_PUBLIC_IP> << 'EOF'
        docker pull <docker-username>/projetoredes:latest
        docker stop projetoredes || true
        docker rm projetoredes || true
        docker run -d --name projetoredes -p 80:8080 <docker-username>/projetoredes:latest
        EOF
